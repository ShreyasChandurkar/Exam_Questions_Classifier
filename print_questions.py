# -*- coding: utf-8 -*-
"""print_questions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19F6AT51LMNflyIoPfKjZh9s2ZT9-xiXV
"""

!pip install --upgrade PyPDF2

import PyPDF2
import re

def extract_text_from_pdf(pdf_path):
    text = ""
    with open(pdf_path, 'rb') as file:
        pdf_reader = PyPDF2.PdfReader(file)
        for page_num in range(len(pdf_reader.pages)):
            page = pdf_reader.pages[page_num]
            text += page.extract_text()
    return text

def extract_questions(text):
    # Pattern to match sections labeled as "a)", "b)", "c)", "d)", etc.
    question_pattern = re.compile(r'\b([a-z]\))\b')
    end_of_question_pattern = re.compile(r'[\?\.\!]')

    questions = []
    current_question = ""
    question_letter = None

    # Replace new lines with spaces to handle multi-line questions
    text = re.sub(r'\n', ' ', text)

    for part in text.split():
        if question_pattern.match(part):
            if current_question:
                questions.append(current_question.strip())
            question_letter = part
            current_question = f"{question_letter} "
        elif question_letter:
            current_question += part + " "
            if end_of_question_pattern.search(part):
                questions.append(current_question.strip())
                current_question = ""
                question_letter = None

    if current_question:
        questions.append(current_question.strip())

    return questions

def format_questions(questions):
    formatted_questions = {}
    for idx, question in enumerate(questions, start=1):
        formatted_questions[f'{chr(96 + idx)}) question'] = question
    return formatted_questions

def main():
    pdf_path = '/content/Req_Format_Pdf.pdf'
    text = extract_text_from_pdf(pdf_path)
    questions = extract_questions(text)
    formatted_questions = format_questions(questions)

    for question_number, question in formatted_questions.items():
        print(f'{question_number}: {question}\n')

if __name__ == "__main__":
    main()

